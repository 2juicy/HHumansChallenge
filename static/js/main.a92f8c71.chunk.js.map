{"version":3,"sources":["components/Header/Header.js","components/Sidebar/Sidebar.js","components/Card/Card.js","components/List/List.js","components/Pagination/Pagination.js","components/Detail/Detail.js","index.js","App.js"],"names":["Header","searchColor","invalid","useState","value","setValue","id","className","href","alt","src","process","onChange","e","target","onKeyDown","keyCode","label","placeholder","Sidebar","random","onClick","Card","color","viewDetails","name","colorId","style","backgroundColor","hexString","List","colors","loading","textAlign","map","key","Pagination","currentPage","totalColors","colorsPerPage","paginate","pages","i","Math","ceil","push","num","Detail","detail","clear","ReactDOM","render","setColors","setLoading","showDetail","setShowDetail","details","setDetails","detailColors","setDetailColors","setInvalid","setCurrentPage","useEffect","a","fetch","res","ok","Error","json","catch","err","console","error","indexOfLast","indexOfFirst","currentColors","slice","length","index","findIndex","x","toLowerCase","setTimeout","randomize","floor","Fragment","page","document","getElementById"],"mappings":"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","file":"static/js/main.a92f8c71.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Header.css\";\n\nexport default function Header({ searchColor, invalid }) {\n  const [value, setValue] = useState(\"\");\n\n  const keyPress = e => {\n    if (e.keyCode === 13) {\n      searchColor(e.target.value);\n    }\n  };\n\n  return (\n    <header id=\"header-component\">\n      <div className=\"logo\">\n        <a href=\"#0\">\n          <img\n            alt=\"Helpful Humans\"\n            src={process.env.PUBLIC_URL + \"/assets/logo.svg\"}\n          />\n        </a>\n      </div>\n      <input\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        onKeyDown={keyPress}\n        className={(invalid ? \"blink \" : \"\") + \"search\"}\n        label=\"Search\"\n        placeholder=\"Search\"\n      />\n    </header>\n  );\n}\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\n\r\nexport default function Sidebar({ random, searchColor }) {\r\n  return (\r\n    <section className=\"sidebar\">\r\n      <div id=\"sidebar-logo\">\r\n        <a href=\"#0\">\r\n          <img\r\n            alt=\"Helpful Humans\"\r\n            src={process.env.PUBLIC_URL + \"/assets/blacklogo.png\"}\r\n          />\r\n        </a>\r\n      </div>\r\n      <div className=\"random-button\">\r\n        <button onClick={random} className=\"random\">\r\n          Random Color\r\n        </button>\r\n      </div>\r\n      <div className=\"flex\">\r\n        <a onClick={() => searchColor(\"Red\")} href=\"#0\" className=\"colors\">\r\n          Red\r\n        </a>\r\n        <a onClick={() => searchColor(\"Orange\")} href=\"#0\" className=\"colors\">\r\n          Orange\r\n        </a>\r\n        <a onClick={() => searchColor(\"Yellow\")} href=\"#0\" className=\"colors\">\r\n          Yellow\r\n        </a>\r\n        <a onClick={() => searchColor(\"Green\")} href=\"#0\" className=\"colors\">\r\n          Green\r\n        </a>\r\n        <a onClick={() => searchColor(\"Blue\")} href=\"#0\" className=\"colors\">\r\n          Blue\r\n        </a>\r\n        <a onClick={() => searchColor(\"Purple\")} href=\"#0\" className=\"colors\">\r\n          Purple\r\n        </a>\r\n        <a onClick={() => searchColor(\"Brown\")} href=\"#0\" className=\"colors\">\r\n          Brown\r\n        </a>\r\n        <a onClick={() => searchColor(\"Gray\")} href=\"#0\" className=\"colors\">\r\n          Gray\r\n        </a>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./Card.css\";\n\nexport default function Card({ color, viewDetails }) {\n  return (\n    <div className=\"card\">\n      <span className=\"tooltiptext\">{color.name}</span>\n      <div\n        onClick={() => viewDetails(color.colorId)}\n        className=\"card-color\"\n        style={{ backgroundColor: color.hexString }}\n      ></div>\n      <div className=\"card-text\">\n        <p>{color.hexString}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Card from \"../Card/Card\";\n\nimport \"./List.css\";\n\nexport default function List({ colors, loading, viewDetails }) {\n  if (loading) {\n    return <h1 style={{ textAlign: \"center\" }}>Loading...</h1>;\n  }\n\n  return (\n    <section id=\"list-section\">\n      {colors.map(color => (\n        <Card key={color.colorId} color={color} viewDetails={viewDetails} />\n      ))}\n    </section>\n  );\n}\n","import React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nexport default function Pagination({\r\n  currentPage,\r\n  totalColors,\r\n  colorsPerPage,\r\n  paginate\r\n}) {\r\n  const pages = [];\r\n  for (let i = 1; i <= Math.ceil(totalColors / colorsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pages\">\r\n      <a onClick={() => paginate(-1)} href=\"#0\" className=\"page-link\">\r\n        &laquo;\r\n      </a>\r\n\r\n      {pages.map(num => (\r\n        <a\r\n          key={num}\r\n          onClick={() => paginate(num)}\r\n          href=\"#0\"\r\n          className={(currentPage === num ? \"active \" : \"\") + \"page-link\"}\r\n        >\r\n          {num}\r\n        </a>\r\n      ))}\r\n\r\n      <a onClick={() => paginate(0)} href=\"#0\" className=\"page-link\">\r\n        &raquo;\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./Detail.css\";\nimport Card from \"../Card/Card\";\n\nexport default function Detail({ detail, colors, viewDetails, clear }) {\n  return (\n    <div id=\"detail\">\n      <Card color={detail} viewDetails={viewDetails} />\n      <div className=\"flex-detail\">\n        {colors.map(color => (\n          <Card key={color.colorId} color={color} viewDetails={viewDetails} />\n        ))}\n      </div>\n      <div className=\"clear-button\">\n        <button onClick={clear}>Clear</button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport List from \"./components/List/List\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport Detail from \"./components/Detail/Detail\";\n// Without a backend we can import the colors directly\n// import colors from \"./colors.json\";\n\nexport default function App() {\n  const [colors, setColors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showDetail, setShowDetail] = useState(false);\n  const [details, setDetails] = useState();\n  const [detailColors, setDetailColors] = useState([]);\n  const [invalid, setInvalid] = useState(false);\n  let [currentPage, setCurrentPage] = useState(1);\n  const colorsPerPage = 12;\n\n  // For now we fetch locally for colors, when an API endpoint is created we can fetch from server.\n  useEffect(() => {\n    (async function() {\n      setLoading(true);\n      let res = await fetch(\"colors.json\");\n      if (!res.ok) throw new Error(\"Failed to fetch\");\n      let json = await res.json();\n      setColors(json);\n      setLoading(false);\n    })().catch(err => console.error(err));\n  }, []);\n\n  const indexOfLast = currentPage * colorsPerPage;\n  const indexOfFirst = indexOfLast - colorsPerPage;\n  const currentColors = colors.slice(indexOfFirst, indexOfLast);\n\n  // Functions for event handling\n  const paginate = page => {\n    if (page > 0) {\n      setCurrentPage(page);\n    } else if (\n      page === 0 &&\n      currentPage < Math.ceil(colors.length / colorsPerPage)\n    ) {\n      setCurrentPage(++currentPage);\n    } else if (page === -1 && currentPage > 1) {\n      setCurrentPage(--currentPage);\n    }\n  };\n\n  const randomColor = () => {\n    setShowDetail(true);\n    const randomize = Math.floor(Math.random() * colors.length);\n    setDetails(colors[randomize]);\n    setDetailColors(colors.slice(randomize + 1, randomize + 6));\n  };\n\n  const viewDetails = colorId => {\n    setShowDetail(true);\n    setDetails(colors[colorId]);\n    if (colorId + 6 > colors.length) {\n      setDetailColors(colors.slice(colorId - 6, colorId - 1));\n    } else {\n      setDetailColors(colors.slice(colorId + 1, colorId + 6));\n    }\n  };\n\n  const searchColor = color => {\n    const index = colors.findIndex(\n      x => x.name.toLowerCase() === color.toLowerCase()\n    );\n    if (index > -1) {\n      viewDetails(index);\n    } else {\n      if (!invalid) {\n        setInvalid(true);\n        setTimeout(() => {\n          setInvalid(false);\n        }, 3000);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header searchColor={searchColor} invalid={invalid} />\n      <Sidebar random={randomColor} searchColor={searchColor} />\n      {!showDetail ? (\n        <React.Fragment>\n          <List\n            colors={currentColors}\n            loading={loading}\n            viewDetails={viewDetails}\n          />\n          <Pagination\n            currentPage={currentPage}\n            colorsPerPage={colorsPerPage}\n            totalColors={colors.length}\n            paginate={paginate}\n          />\n        </React.Fragment>\n      ) : (\n        <Detail\n          detail={details}\n          colors={detailColors}\n          viewDetails={viewDetails}\n          clear={() => setShowDetail(false)}\n        />\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}